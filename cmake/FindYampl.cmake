message(STATUS "Searching for yampl library in LD_LIBRARY_PATH and ${YAMPL_DIR} ")
INCLUDE(CheckIncludeFileCXX)
find_path(YAMPL_INC_DIR ISocketFactory.h HINTS ${YAMPL_DIR} ENV LD_LIBRARY_PATH PATH_SUFFIXES "/include/yampl" "../include/yampl" "../../include/yampl" NO_DEFAULT_PATH )
find_path(YAMPL_INC_DIR ISocketFactory.h HINTS ${YAMPL_DIR} ENV LD_LIBRARY_PATH PATH_SUFFIXES "/include/yampl" "../include/yampl" "../../include/yampl" )
message(STATUS "YAMPL_INC_DIR=${YAMPL_INC_DIR} ")
find_library(YAMPL_LIBRARIES NAMES yampl HINTS ${YAMPL_DIR} ENV LD_LIBRARY_PATH PATH_SUFFIXES "" "/lib" NO_DEFAULT_PATH)
find_library(YAMPL_LIBRARIES NAMES yampl HINTS ${YAMPL_DIR} ENV LD_LIBRARY_PATH PATH_SUFFIXES "" "/lib")
message(STATUS "YAMPL_LIBRARIES=${YAMPL_LIBRARIES} ")
get_filename_component(YAMPL_ABS_INC_DIR "${YAMPL_INC_DIR}" ABSOLUTE)
get_filename_component(YAMPL_ABS_INC_DIR "${YAMPL_ABS_INC_DIR}" DIRECTORY)
message(STATUS "YAMPL_ABS_INC_DIR=${YAMPL_ABS_INC_DIR} ")
set(YAMPL_INCLUDE_DIRS "${YAMPL_ABS_INC_DIR}" CACHE PATH "yampl include path")
message(STATUS "YAMPL_INCLUDE_DIRS=${YAMPL_INCLUDE_DIRS} ")
get_filename_component(YAMPL_LIBRARY_DIRS "${YAMPL_LIBRARIES}" PATH)
INCLUDE(FindPackageHandleStandardArgs)
unset(YAMPL_INC_DIR CACHE)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Yampl DEFAULT_MSG YAMPL_INCLUDE_DIRS YAMPL_LIBRARIES YAMPL_LIBRARY_DIRS)
mark_as_advanced(YAMPL_FOUND YAMPL_INCLUDE_DIRS YAMPL_LIBRARIES)
